// This file is auto-generated by @hey-api/openapi-ts

export const $Body_login_access_token_api_login_access_token_post = {
    properties: {
        grant_type: {
            anyOf: [
                {
                    type: 'string',
                    pattern: 'password'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Grant Type'
        },
        username: {
            type: 'string',
            title: 'Username'
        },
        password: {
            type: 'string',
            title: 'Password'
        },
        scope: {
            type: 'string',
            title: 'Scope',
            default: ''
        },
        client_id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Client Id'
        },
        client_secret: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Client Secret'
        }
    },
    type: 'object',
    required: ['username', 'password'],
    title: 'Body_login_access_token_api_login_access_token_post'
} as const;

export const $Employee = {
    properties: {
        name: {
            type: 'string',
            maxLength: 50,
            title: 'Name'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active',
            default: true
        },
        upi_id: {
            type: 'string',
            maxLength: 50,
            title: 'Upi Id'
        },
        employee_id: {
            type: 'string',
            title: 'Employee Id'
        },
        org_id: {
            type: 'string',
            title: 'Org Id'
        }
    },
    type: 'object',
    required: ['name', 'upi_id', 'org_id'],
    title: 'Employee'
} as const;

export const $EmployeeCreate = {
    properties: {
        name: {
            type: 'string',
            maxLength: 50,
            title: 'Name'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active',
            default: true
        },
        upi_id: {
            type: 'string',
            maxLength: 50,
            title: 'Upi Id'
        },
        organization_id: {
            type: 'string',
            title: 'Organization Id'
        }
    },
    type: 'object',
    required: ['name', 'upi_id', 'organization_id'],
    title: 'EmployeeCreate'
} as const;

export const $EmployerOrganization = {
    properties: {
        email: {
            type: 'string',
            format: 'email',
            title: 'Email'
        },
        organization_name: {
            type: 'string',
            maxLength: 50,
            title: 'Organization Name'
        },
        organization_description: {
            type: 'string',
            maxLength: 50,
            title: 'Organization Description'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active',
            default: true
        },
        organization_id: {
            type: 'string',
            title: 'Organization Id'
        },
        hashed_password: {
            type: 'string',
            title: 'Hashed Password'
        },
        total_tips: {
            type: 'integer',
            title: 'Total Tips',
            default: 0
        }
    },
    type: 'object',
    required: ['email', 'organization_name', 'organization_description', 'hashed_password'],
    title: 'EmployerOrganization'
} as const;

export const $EmployerOrganizationCreate = {
    properties: {
        email: {
            type: 'string',
            format: 'email',
            title: 'Email'
        },
        organization_name: {
            type: 'string',
            maxLength: 50,
            title: 'Organization Name'
        },
        organization_description: {
            type: 'string',
            maxLength: 50,
            title: 'Organization Description'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active',
            default: true
        },
        password: {
            type: 'string',
            maxLength: 100,
            title: 'Password'
        }
    },
    type: 'object',
    required: ['email', 'organization_name', 'organization_description', 'password'],
    title: 'EmployerOrganizationCreate'
} as const;

export const $HTTPValidationError = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const $OrganizationEmployees = {
    properties: {
        org_id: {
            type: 'string',
            title: 'Org Id'
        },
        organization_name: {
            type: 'string',
            title: 'Organization Name'
        },
        organization_description: {
            type: 'string',
            title: 'Organization Description'
        },
        data: {
            items: {
                '$ref': '#/components/schemas/Employee'
            },
            type: 'array',
            title: 'Data'
        }
    },
    type: 'object',
    required: ['org_id', 'organization_name', 'organization_description', 'data'],
    title: 'OrganizationEmployees'
} as const;

export const $TipCreate = {
    properties: {
        employee_id: {
            type: 'string',
            title: 'Employee Id'
        },
        amount: {
            type: 'integer',
            title: 'Amount'
        }
    },
    type: 'object',
    required: ['employee_id', 'amount'],
    title: 'TipCreate'
} as const;

export const $Token = {
    properties: {
        access_token: {
            type: 'string',
            title: 'Access Token'
        },
        token_type: {
            type: 'string',
            title: 'Token Type',
            default: 'bearer'
        }
    },
    type: 'object',
    required: ['access_token'],
    title: 'Token'
} as const;

export const $ValidationError = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;